name: Deploy de Produ√ß√£o

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  # Build otimizado para produ√ß√£o
  build-production:
    name: Build de Produ√ß√£o
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: logoshub-app/package-lock.json
        
    - name: Instalar depend√™ncias (produ√ß√£o)
      run: |
        cd logoshub-app
        npm ci --omit=dev
        
    - name: Build de produ√ß√£o
      run: |
        cd logoshub-app
        npm run build:prod
        
    - name: Upload artefatos de produ√ß√£o
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: logoshub-app/dist/
        retention-days: 30
        
  # Deploy para produ√ß√£o
  deploy-production:
    name: Deploy para Produ√ß√£o
    runs-on: ubuntu-latest
    needs: build-production
    environment: production
    
    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: logoshub-app/package-lock.json
        
    - name: Instalar depend√™ncias (produ√ß√£o)
      run: |
        cd logoshub-app
        npm ci --omit=dev
        
    - name: Download artefatos de produ√ß√£o
      uses: actions/download-artifact@v4
      with:
        name: production-build
        path: logoshub-app/dist/
        
    - name: Deploy para produ√ß√£o
      run: |
        echo "üöÄ Iniciando deploy para produ√ß√£o..."
        # Aqui voc√™ pode adicionar comandos espec√≠ficos para seu ambiente de produ√ß√£o
        # Por exemplo: Firebase Hosting, Vercel, Netlify, etc.
        
    - name: Notificar deploy
      run: |
        echo "‚úÖ Deploy para produ√ß√£o conclu√≠do com sucesso!"
        echo "üåê URL: https://logoshub.com"
        
    - name: Criar release tag
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v$(date +%Y%m%d-%H%M%S)" -m "Deploy autom√°tico para produ√ß√£o"
        git push origin --tags
